// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dj_actionlayer.DAO;

using AppContext = dj_actionlayer.DAO.AppContext;

#nullable disable

namespace dj_actionlayer.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20230410094436_create2")]
    partial class create2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.CommentLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommentLessonParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentLessonParentId");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("comment_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.CommentPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommentPostParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentPostParentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("comment_post");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DonePercent")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastTimeStudyDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResisterDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isDone")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("user_course");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLessonCheckpoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OpenLessonDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("user_lesson_checkpoint");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLessonNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NoteTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.Property<int>("UserLessonCheckpointId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserLessonCheckpointId");

                    b.ToTable("user_lesson_note");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikeCommentLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CommentLessonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentLessonId");

                    b.HasIndex("UserId");

                    b.ToTable("user_like_comment_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikeCommentPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CommentPostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentPostId");

                    b.HasIndex("UserId");

                    b.ToTable("user_like_comment_post");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikePost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LikeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("user_like_post");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.ChapterLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddLessonToChapterDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CourseChapterId")
                        .HasColumnType("int");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseChapterId");

                    b.HasIndex("LessonId");

                    b.ToTable("chapter_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChapterCount")
                        .HasColumnType("int");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CourseImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("CourseLevelId")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseStatusId")
                        .HasColumnType("int");

                    b.Property<string>("CourseSubTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DoneCount")
                        .HasColumnType("int");

                    b.Property<int>("LessonCount")
                        .HasColumnType("int");

                    b.Property<int>("RegisterCount")
                        .HasColumnType("int");

                    b.Property<string>("TimeLessonTotal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseLevelId");

                    b.HasIndex("CourseStatusId");

                    b.HasIndex("CourseTypeId");

                    b.ToTable("course");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseChapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ChapterCreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChapterLessonCount")
                        .HasColumnType("int");

                    b.Property<string>("ChapterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChapterTotalTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("course_chapter");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseCourseProfit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("CourseProfitId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseProfitId");

                    b.ToTable("course_course_profit");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseCourseRequire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("CourseRequireId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseRequireId");

                    b.ToTable("course_course_require");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<byte[]>("CourseImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("course_image");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LevelCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_level");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseProfit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CourseProfitCreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourseProfitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_profit");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseRequire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CourseRequireCreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourseRequireName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_require");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CourseStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CourseTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_type");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LessonDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LessonTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("VideoTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonTypeId");

                    b.ToTable("lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.LessonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LessonTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("lesson_type");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.PracticeLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ExpecOutput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Input")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suggest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("practice_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.QuestionLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Answer")
                        .HasColumnType("int");

                    b.Property<string>("AnswerA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("question_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.TestCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ExpecOutput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Input")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PracticeLessonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PracticeLessonId");

                    b.ToTable("test_case");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.VideoLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("LessonLinkUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("video_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.PostEntity.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatePost")
                        .HasColumnType("datetime2");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<byte[]>("PostAvatar")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PostMiniAvatar")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("PostStatusId")
                        .HasColumnType("int");

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatePost")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserCreateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostStatusId");

                    b.HasIndex("UserCreateId");

                    b.ToTable("post");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.PostEntity.PostSentence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Sentence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SentenceType")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("post_sentence");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.PostEntity.PostStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PostStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("post_status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.AdministrativeRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("administrative_regions");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.AdministrativeUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("short_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("short_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("administrative_units");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.District", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("administrative_unit_id")
                        .HasColumnType("int");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("province_code")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("code");

                    b.HasIndex("administrative_unit_id");

                    b.HasIndex("province_code");

                    b.ToTable("districts");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GenderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gender");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Province", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("administrative_region_id")
                        .HasColumnType("int");

                    b.Property<int?>("administrative_unit_id")
                        .HasColumnType("int");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("administrative_region_id");

                    b.HasIndex("administrative_unit_id");

                    b.ToTable("provinces");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("refresh_token");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("NumberPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("UserAvatarData")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("UserAvatarData40x40")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFacebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFisrtName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserStatusId")
                        .HasColumnType("int");

                    b.Property<string>("WardCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictCode");

                    b.HasIndex("GenderId");

                    b.HasIndex("ProvinceCode");

                    b.HasIndex("UserRoleId");

                    b.HasIndex("UserStatusId");

                    b.HasIndex("WardCode");

                    b.ToTable("user");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserRoleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("user_role");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.UserStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("user_status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Ward", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("administrative_unit_id")
                        .HasColumnType("int");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district_code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("administrative_unit_id");

                    b.HasIndex("district_code");

                    b.ToTable("wards");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.CommentLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentLesson", "CommentLessonParent")
                        .WithMany()
                        .HasForeignKey("CommentLessonParentId");

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CommentLessonParent");

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.CommentPost", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentPost", "CommentPostParent")
                        .WithMany()
                        .HasForeignKey("CommentPostParentId");

                    b.HasOne("dj_webdesigncore.Entities.PostEntity.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CommentPostParent");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserCourse", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLessonCheckpoint", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLessonNote", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.UserLessonCheckpoint", "UserLessonCheckpoint")
                        .WithMany()
                        .HasForeignKey("UserLessonCheckpointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLessonCheckpoint");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikeCommentLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentLesson", "CommentLesson")
                        .WithMany()
                        .HasForeignKey("CommentLessonId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CommentLesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikeCommentPost", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentPost", "CommentPost")
                        .WithMany()
                        .HasForeignKey("CommentPostId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CommentPost");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikePost", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.PostEntity.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.ChapterLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseChapter", "CourseChapter")
                        .WithMany()
                        .HasForeignKey("CourseChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseChapter");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.Course", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseLevel", "CourseLevel")
                        .WithMany()
                        .HasForeignKey("CourseLevelId");

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseStatus", "CourseStatus")
                        .WithMany()
                        .HasForeignKey("CourseStatusId");

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseType", "CourseType")
                        .WithMany()
                        .HasForeignKey("CourseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseLevel");

                    b.Navigation("CourseStatus");

                    b.Navigation("CourseType");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseChapter", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseCourseProfit", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseProfit", "CourseProfit")
                        .WithMany()
                        .HasForeignKey("CourseProfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CourseProfit");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseCourseRequire", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseRequire", "CourseRequire")
                        .WithMany()
                        .HasForeignKey("CourseRequireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CourseRequire");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseImage", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.Lesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.LessonType", "LessonType")
                        .WithMany()
                        .HasForeignKey("LessonTypeId");

                    b.Navigation("LessonType");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.QuestionLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.TestCase", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.PracticeLesson", "PracticeLesson")
                        .WithMany()
                        .HasForeignKey("PracticeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PracticeLesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.VideoLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.PostEntity.Post", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.PostEntity.PostStatus", "PostStatus")
                        .WithMany()
                        .HasForeignKey("PostStatusId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "UserCreate")
                        .WithMany()
                        .HasForeignKey("UserCreateId");

                    b.Navigation("PostStatus");

                    b.Navigation("UserCreate");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.PostEntity.PostSentence", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.PostEntity.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.District", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.AdministrativeUnits", "AdministrativeUnit")
                        .WithMany()
                        .HasForeignKey("administrative_unit_id");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.Province", "Province")
                        .WithMany()
                        .HasForeignKey("province_code");

                    b.Navigation("AdministrativeUnit");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Province", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.AdministrativeRegion", "AdministrativeRegion")
                        .WithMany()
                        .HasForeignKey("administrative_region_id");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.AdministrativeUnits", "AdministrativeUnit")
                        .WithMany()
                        .HasForeignKey("administrative_unit_id");

                    b.Navigation("AdministrativeRegion");

                    b.Navigation("AdministrativeUnit");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.RefreshToken", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.User", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictCode");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceCode");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("UserRoleId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.UserStatus", "UserStatus")
                        .WithMany()
                        .HasForeignKey("UserStatusId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardCode");

                    b.Navigation("District");

                    b.Navigation("Gender");

                    b.Navigation("Province");

                    b.Navigation("Role");

                    b.Navigation("UserStatus");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Ward", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.AdministrativeUnits", "AdministrativeUnit")
                        .WithMany()
                        .HasForeignKey("administrative_unit_id");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.District", "District")
                        .WithMany()
                        .HasForeignKey("district_code");

                    b.Navigation("AdministrativeUnit");

                    b.Navigation("District");
                });
#pragma warning restore 612, 618
        }
    }
}
