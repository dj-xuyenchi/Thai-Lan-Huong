// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dj_actionlayer.DAO;
using AppContext = dj_actionlayer.DAO.AppContext;

#nullable disable

namespace dj_actionlayer.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20230609064742_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("dj_webdesigncore.Entities.BlogEntity.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("BlogImg")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("BlogLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlogTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CmtCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogTypeId");

                    b.HasIndex("StatusId");

                    b.ToTable("blog");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BlogEntity.BlogStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("blog_status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BlogEntity.BlogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("blog_type");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.AdviceContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ContactTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Evaluate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsContact")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendRequest")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserContactId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserContactId");

                    b.ToTable("advice_contact");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.CommentLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommentLessonParentId")
                        .HasColumnType("int");

                    b.Property<int?>("CommentStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LessonId")
                        .HasColumnType("int");

                    b.Property<int?>("LikeCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentLessonParentId");

                    b.HasIndex("CommentStatusId");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("comment_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.CommentPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommentPostParentId")
                        .HasColumnType("int");

                    b.Property<int?>("CommentStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentPostParentId");

                    b.HasIndex("CommentStatusId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("comment_post");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.CommentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("comment_status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.ConfirmEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiredDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequiredDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("confirm_email");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.Denounce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CheckTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CmtId")
                        .HasColumnType("int");

                    b.Property<int?>("DenounceTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<bool>("IsViolation")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProveLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeCmt")
                        .HasColumnType("int");

                    b.Property<int>("UserSendId")
                        .HasColumnType("int");

                    b.Property<int>("UserViolationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DenounceTypeId");

                    b.HasIndex("UserSendId");

                    b.ToTable("denounce");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.DenounceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DenounceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DenounceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("denounce_type");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.HomeContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slide1")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Slide2")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Slide3")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Slide4")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Slide5")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("home_content");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.HomeNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Img")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserPublicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserPublicId");

                    b.ToTable("home_notification");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.PracticeDoneData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DoneData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoneTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LangueId")
                        .HasColumnType("int");

                    b.Property<int>("PracticeLessonId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.HasIndex("PracticeLessonId");

                    b.HasIndex("UserId");

                    b.ToTable("practice_done_data");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.QuestionDoneData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Answer")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DoneTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuestionLessonId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionLessonId");

                    b.HasIndex("UserId");

                    b.ToTable("question_done_data");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.Trophic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TrophicCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("trophic");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("user_catalog");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DonePercent")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastTimeStudyDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResisterDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isDone")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("user_course");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLessonCheckpoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OpenLessonDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("user_lesson_checkpoint");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLessonNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NoteTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.Property<int>("UserLessonCheckpointId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserLessonCheckpointId");

                    b.ToTable("user_lesson_note");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikeCommentLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CommentLessonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentLessonId");

                    b.HasIndex("UserId");

                    b.ToTable("user_like_comment_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikeCommentPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CommentPostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentPostId");

                    b.HasIndex("UserId");

                    b.ToTable("user_like_comment_post");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikePost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LikeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("user_like_post");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.VideoDoneData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DoneTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VideoLessonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoLessonId");

                    b.ToTable("video_done_data");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.ChapterLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddLessonToChapterDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CourseChapterId")
                        .HasColumnType("int");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseChapterId");

                    b.HasIndex("LessonId");

                    b.ToTable("chapter_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChapterCount")
                        .HasColumnType("int");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CourseImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("CourseLevelId")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseStatusId")
                        .HasColumnType("int");

                    b.Property<string>("CourseSubTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DoneCount")
                        .HasColumnType("int");

                    b.Property<string>("IntroVideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LessonCount")
                        .HasColumnType("int");

                    b.Property<int>("RegisterCount")
                        .HasColumnType("int");

                    b.Property<string>("ResourceLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeLessonTotal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseLevelId");

                    b.HasIndex("CourseStatusId");

                    b.HasIndex("CourseTypeId");

                    b.ToTable("course");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseChapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ChapterCreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChapterLessonCount")
                        .HasColumnType("int");

                    b.Property<string>("ChapterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChapterTotalTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("course_chapter");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseCourseProfit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("CourseProfitId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseProfitId");

                    b.ToTable("course_course_profit");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseCourseRequire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("CourseRequireId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseRequireId");

                    b.ToTable("course_course_require");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<byte[]>("CourseImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("course_image");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LevelCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_level");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseProfit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CourseProfitCreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourseProfitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_profit");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseRequire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CourseRequireCreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourseRequireName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_require");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CourseStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CourseTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("course_type");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.Langue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LangueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("langue");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LessonDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LessonStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("LessonTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ResourceLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("VideoTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonStatusId");

                    b.HasIndex("LessonTypeId");

                    b.ToTable("lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.LessonStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LessonStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("lesson_status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.LessonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LessonTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("lesson_type");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.MultiLangueCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BeginCodeMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallTestCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LangueId")
                        .HasColumnType("int");

                    b.Property<int>("PracticeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LangueId");

                    b.HasIndex("PracticeId");

                    b.ToTable("multi_langue_code");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.PracticeLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BeginCodeMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallTestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectOutput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Input")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsSupportMultiLangue")
                        .HasColumnType("bit");

                    b.Property<int?>("LangueDefaultId")
                        .HasColumnType("int");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suggest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LangueDefaultId");

                    b.HasIndex("LessonId");

                    b.ToTable("practice_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.QuestionLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Answer")
                        .HasColumnType("int");

                    b.Property<string>("AnswerA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("question_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.TestCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ExpectOutput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Input")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockTestCase")
                        .HasColumnType("bit");

                    b.Property<int>("PracticeLessonId")
                        .HasColumnType("int");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PracticeLessonId");

                    b.ToTable("test_case");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.VideoLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("LessonLinkUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("video_lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.PostEntity.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatePost")
                        .HasColumnType("datetime2");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<byte[]>("PostAvatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PostData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostImgLinkMeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PostMiniAvatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("PostStatusId")
                        .HasColumnType("int");

                    b.Property<string>("PostTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatePost")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserCreateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostStatusId");

                    b.HasIndex("UserCreateId");

                    b.ToTable("post");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.PostEntity.PostStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PostStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("post_status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.AdministrativeRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("administrative_regions");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.AdministrativeUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("short_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("short_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("administrative_units");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.District", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("administrative_unit_id")
                        .HasColumnType("int");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("province_code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.ToTable("districts");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Close")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Open")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("experience");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GenderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gender");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.LearningExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Close")
                        .HasColumnType("datetime2");

                    b.Property<int>("MajorsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Open")
                        .HasColumnType("datetime2");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MajorsId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("UserId");

                    b.ToTable("learning_experience");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Majors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MajorsCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MajorsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("majors");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SystemNotification")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserSendId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("notification");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Province", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("administrative_region_id")
                        .HasColumnType("int");

                    b.Property<int?>("administrative_unit_id")
                        .HasColumnType("int");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.ToTable("provinces");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("refresh_token");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolTypeId");

                    b.ToTable("school");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.SchoolType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SchoolTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("school_type");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressNow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CatalogId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateAccount")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsKYC")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("KYCTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumberPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UnlockTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("UserAvatarData")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("UserAvatarData40x40")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("UserCoverImg")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFacebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFisrtName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLinkedIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserStatusId")
                        .HasColumnType("int");

                    b.Property<string>("WardCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.HasIndex("DistrictCode");

                    b.HasIndex("GenderId");

                    b.HasIndex("ProvinceCode");

                    b.HasIndex("UserRoleId");

                    b.HasIndex("UserStatusId");

                    b.HasIndex("WardCode");

                    b.ToTable("user");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserRoleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("user_role");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.UserStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserStatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("user_status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Ward", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("administrative_unit_id")
                        .HasColumnType("int");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.ToTable("wards");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserTrophic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("TakeTrophicDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrophicId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrophicId");

                    b.HasIndex("UserId");

                    b.ToTable("user_trophic");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BlogEntity.Blog", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BlogEntity.BlogType", "BlogType")
                        .WithMany()
                        .HasForeignKey("BlogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.BlogEntity.BlogStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogType");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.AdviceContact", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "UserContact")
                        .WithMany()
                        .HasForeignKey("UserContactId");

                    b.Navigation("UserContact");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.CommentLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentLesson", "CommentLessonParent")
                        .WithMany()
                        .HasForeignKey("CommentLessonParentId");

                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentStatus", "CommentStatus")
                        .WithMany()
                        .HasForeignKey("CommentStatusId");

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CommentLessonParent");

                    b.Navigation("CommentStatus");

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.CommentPost", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentPost", "CommentPostParent")
                        .WithMany()
                        .HasForeignKey("CommentPostParentId");

                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentStatus", "CommentStatus")
                        .WithMany()
                        .HasForeignKey("CommentStatusId");

                    b.HasOne("dj_webdesigncore.Entities.PostEntity.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CommentPostParent");

                    b.Navigation("CommentStatus");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.ConfirmEmail", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.Denounce", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.DenounceType", "DenounceType")
                        .WithMany()
                        .HasForeignKey("DenounceTypeId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "UserSend")
                        .WithMany()
                        .HasForeignKey("UserSendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DenounceType");

                    b.Navigation("UserSend");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.HomeNotification", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "UserPublic")
                        .WithMany()
                        .HasForeignKey("UserPublicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserPublic");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.PracticeDoneData", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId");

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.PracticeLesson", "PracticeLesson")
                        .WithMany()
                        .HasForeignKey("PracticeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");

                    b.Navigation("PracticeLesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.QuestionDoneData", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.QuestionLesson", "QuestionLesson")
                        .WithMany()
                        .HasForeignKey("QuestionLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionLesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserCourse", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLessonCheckpoint", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLessonNote", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.UserLessonCheckpoint", "UserLessonCheckpoint")
                        .WithMany()
                        .HasForeignKey("UserLessonCheckpointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLessonCheckpoint");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikeCommentLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentLesson", "CommentLesson")
                        .WithMany()
                        .HasForeignKey("CommentLessonId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CommentLesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikeCommentPost", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.CommentPost", "CommentPost")
                        .WithMany()
                        .HasForeignKey("CommentPostId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CommentPost");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.UserLikePost", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.PostEntity.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.BusinessEntity.VideoDoneData", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.VideoLesson", "VideoLesson")
                        .WithMany()
                        .HasForeignKey("VideoLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VideoLesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.ChapterLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseChapter", "CourseChapter")
                        .WithMany()
                        .HasForeignKey("CourseChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseChapter");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.Course", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseLevel", "CourseLevel")
                        .WithMany()
                        .HasForeignKey("CourseLevelId");

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseStatus", "CourseStatus")
                        .WithMany()
                        .HasForeignKey("CourseStatusId");

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseType", "CourseType")
                        .WithMany()
                        .HasForeignKey("CourseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseLevel");

                    b.Navigation("CourseStatus");

                    b.Navigation("CourseType");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseChapter", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseCourseProfit", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseProfit", "CourseProfit")
                        .WithMany()
                        .HasForeignKey("CourseProfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CourseProfit");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseCourseRequire", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.CourseRequire", "CourseRequire")
                        .WithMany()
                        .HasForeignKey("CourseRequireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CourseRequire");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.CourseImage", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.Lesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.LessonStatus", "LessonStatus")
                        .WithMany()
                        .HasForeignKey("LessonStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.LessonType", "LessonType")
                        .WithMany()
                        .HasForeignKey("LessonTypeId");

                    b.Navigation("LessonStatus");

                    b.Navigation("LessonType");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.MultiLangueCode", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Langue", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.PracticeLesson", "Practice")
                        .WithMany()
                        .HasForeignKey("PracticeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Langue");

                    b.Navigation("Practice");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.PracticeLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Langue", "LangueDefault")
                        .WithMany()
                        .HasForeignKey("LangueDefaultId");

                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LangueDefault");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.QuestionLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.TestCase", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.PracticeLesson", "PracticeLesson")
                        .WithMany()
                        .HasForeignKey("PracticeLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PracticeLesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.CourseEntity.VideoLesson", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.CourseEntity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.PostEntity.Post", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.PostEntity.PostStatus", "PostStatus")
                        .WithMany()
                        .HasForeignKey("PostStatusId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "UserCreate")
                        .WithMany()
                        .HasForeignKey("UserCreateId");

                    b.Navigation("PostStatus");

                    b.Navigation("UserCreate");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Experience", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.LearningExperience", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.Majors", "Majors")
                        .WithMany()
                        .HasForeignKey("MajorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Majors");

                    b.Navigation("School");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.Notification", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.RefreshToken", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.School", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.UserEntity.SchoolType", "SchoolType")
                        .WithMany()
                        .HasForeignKey("SchoolTypeId");

                    b.Navigation("SchoolType");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserEntity.User", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.UserCatalog", "Catalog")
                        .WithMany()
                        .HasForeignKey("CatalogId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictCode");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceCode");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("UserRoleId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.UserStatus", "UserStatus")
                        .WithMany()
                        .HasForeignKey("UserStatusId");

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardCode");

                    b.Navigation("Catalog");

                    b.Navigation("District");

                    b.Navigation("Gender");

                    b.Navigation("Province");

                    b.Navigation("Role");

                    b.Navigation("UserStatus");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("dj_webdesigncore.Entities.UserTrophic", b =>
                {
                    b.HasOne("dj_webdesigncore.Entities.BusinessEntity.Trophic", "Trophic")
                        .WithMany()
                        .HasForeignKey("TrophicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dj_webdesigncore.Entities.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trophic");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
